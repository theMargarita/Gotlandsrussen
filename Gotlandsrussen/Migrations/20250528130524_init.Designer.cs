// <auto-generated />
using System;
using Gotlandsrussen.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GotlandsrussenAPI.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20250528130524_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Gotlandsrussen.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Breakfast")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date");

                    b.Property<int>("GuestId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 6, 10),
                            GuestId = 1,
                            IsCancelled = false,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            ToDate = new DateOnly(2025, 6, 11)
                        },
                        new
                        {
                            Id = 2,
                            Breakfast = true,
                            FromDate = new DateOnly(2025, 6, 10),
                            GuestId = 2,
                            IsCancelled = false,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            ToDate = new DateOnly(2025, 6, 15)
                        },
                        new
                        {
                            Id = 3,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 6, 11),
                            GuestId = 3,
                            IsCancelled = false,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            ToDate = new DateOnly(2025, 6, 13)
                        },
                        new
                        {
                            Id = 4,
                            Breakfast = true,
                            FromDate = new DateOnly(2025, 6, 12),
                            GuestId = 4,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            ToDate = new DateOnly(2025, 6, 13)
                        },
                        new
                        {
                            Id = 5,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 6, 15),
                            GuestId = 5,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            ToDate = new DateOnly(2025, 6, 17)
                        },
                        new
                        {
                            Id = 6,
                            Breakfast = true,
                            FromDate = new DateOnly(2025, 6, 15),
                            GuestId = 6,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            ToDate = new DateOnly(2025, 6, 16)
                        },
                        new
                        {
                            Id = 7,
                            Breakfast = true,
                            FromDate = new DateOnly(2025, 6, 16),
                            GuestId = 7,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            ToDate = new DateOnly(2025, 6, 18)
                        },
                        new
                        {
                            Id = 8,
                            Breakfast = true,
                            FromDate = new DateOnly(2025, 7, 1),
                            GuestId = 8,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            ToDate = new DateOnly(2025, 7, 2)
                        },
                        new
                        {
                            Id = 9,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 7, 1),
                            GuestId = 9,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 1,
                            ToDate = new DateOnly(2025, 7, 3)
                        },
                        new
                        {
                            Id = 10,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 7, 1),
                            GuestId = 10,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            ToDate = new DateOnly(2025, 7, 5)
                        },
                        new
                        {
                            Id = 11,
                            Breakfast = true,
                            FromDate = new DateOnly(2025, 7, 5),
                            GuestId = 11,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            ToDate = new DateOnly(2025, 7, 8)
                        },
                        new
                        {
                            Id = 12,
                            Breakfast = true,
                            FromDate = new DateOnly(2025, 7, 10),
                            GuestId = 12,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 1,
                            ToDate = new DateOnly(2025, 7, 15)
                        },
                        new
                        {
                            Id = 13,
                            Breakfast = true,
                            FromDate = new DateOnly(2025, 7, 17),
                            GuestId = 13,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            ToDate = new DateOnly(2025, 7, 19)
                        },
                        new
                        {
                            Id = 14,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 7, 25),
                            GuestId = 14,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 3,
                            ToDate = new DateOnly(2025, 7, 26)
                        },
                        new
                        {
                            Id = 15,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 8, 2),
                            GuestId = 15,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 4,
                            ToDate = new DateOnly(2025, 8, 3)
                        },
                        new
                        {
                            Id = 16,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 8, 3),
                            GuestId = 1,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 4,
                            ToDate = new DateOnly(2025, 8, 5)
                        },
                        new
                        {
                            Id = 17,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 8, 5),
                            GuestId = 2,
                            IsCancelled = false,
                            NumberOfAdults = 4,
                            NumberOfChildren = 0,
                            ToDate = new DateOnly(2025, 8, 7)
                        },
                        new
                        {
                            Id = 18,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 8, 10),
                            GuestId = 3,
                            IsCancelled = false,
                            NumberOfAdults = 3,
                            NumberOfChildren = 3,
                            ToDate = new DateOnly(2025, 8, 13)
                        },
                        new
                        {
                            Id = 19,
                            Breakfast = false,
                            FromDate = new DateOnly(2025, 8, 12),
                            GuestId = 4,
                            IsCancelled = false,
                            NumberOfAdults = 4,
                            NumberOfChildren = 8,
                            ToDate = new DateOnly(2025, 8, 13)
                        },
                        new
                        {
                            Id = 20,
                            Breakfast = true,
                            FromDate = new DateOnly(2025, 8, 15),
                            GuestId = 5,
                            IsCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 5,
                            ToDate = new DateOnly(2025, 8, 20)
                        });
                });

            modelBuilder.Entity("Gotlandsrussen.Models.BookingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("RoomId");

                    b.ToTable("BookingRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookingId = 2,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookingId = 3,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookingId = 4,
                            RoomId = 6
                        },
                        new
                        {
                            Id = 5,
                            BookingId = 5,
                            RoomId = 7
                        },
                        new
                        {
                            Id = 6,
                            BookingId = 6,
                            RoomId = 8
                        },
                        new
                        {
                            Id = 7,
                            BookingId = 7,
                            RoomId = 9
                        },
                        new
                        {
                            Id = 8,
                            BookingId = 8,
                            RoomId = 11
                        },
                        new
                        {
                            Id = 9,
                            BookingId = 9,
                            RoomId = 12
                        },
                        new
                        {
                            Id = 10,
                            BookingId = 10,
                            RoomId = 13
                        },
                        new
                        {
                            Id = 11,
                            BookingId = 11,
                            RoomId = 14
                        },
                        new
                        {
                            Id = 12,
                            BookingId = 12,
                            RoomId = 15
                        },
                        new
                        {
                            Id = 13,
                            BookingId = 13,
                            RoomId = 16
                        },
                        new
                        {
                            Id = 14,
                            BookingId = 14,
                            RoomId = 21
                        },
                        new
                        {
                            Id = 15,
                            BookingId = 15,
                            RoomId = 22
                        },
                        new
                        {
                            Id = 16,
                            BookingId = 16,
                            RoomId = 23
                        },
                        new
                        {
                            Id = 17,
                            BookingId = 17,
                            RoomId = 24
                        },
                        new
                        {
                            Id = 18,
                            BookingId = 18,
                            RoomId = 21
                        },
                        new
                        {
                            Id = 19,
                            BookingId = 19,
                            RoomId = 25
                        },
                        new
                        {
                            Id = 20,
                            BookingId = 20,
                            RoomId = 25
                        });
                });

            modelBuilder.Entity("Gotlandsrussen.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice@example.com",
                            FirstName = "Alice",
                            LastName = "Andersson",
                            Phone = "0701234567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob@example.com",
                            FirstName = "Bob",
                            LastName = "Bengtsson",
                            Phone = "0702345678"
                        },
                        new
                        {
                            Id = 3,
                            Email = "tom@example.com",
                            FirstName = "Tom",
                            LastName = "Larsson",
                            Phone = "0702345679"
                        },
                        new
                        {
                            Id = 4,
                            Email = "lisa@example.com",
                            FirstName = "Lisa",
                            LastName = "Helgesson",
                            Phone = "0702345680"
                        },
                        new
                        {
                            Id = 5,
                            Email = "kalle@example.com",
                            FirstName = "Kalle",
                            LastName = "Spongtsson",
                            Phone = "0702345681"
                        },
                        new
                        {
                            Id = 6,
                            Email = "emma@example.com",
                            FirstName = "Emma",
                            LastName = "Nilsson",
                            Phone = "0702345682"
                        },
                        new
                        {
                            Id = 7,
                            Email = "oscar@example.com",
                            FirstName = "Oscar",
                            LastName = "Johansson",
                            Phone = "0702345683"
                        },
                        new
                        {
                            Id = 8,
                            Email = "sara@example.com",
                            FirstName = "Sara",
                            LastName = "Karlsson",
                            Phone = "0702345684"
                        },
                        new
                        {
                            Id = 9,
                            Email = "erik@example.com",
                            FirstName = "Erik",
                            LastName = "Svensson",
                            Phone = "0702345685"
                        },
                        new
                        {
                            Id = 10,
                            Email = "maja@example.com",
                            FirstName = "Maja",
                            LastName = "Gustafsson",
                            Phone = "0702345686"
                        },
                        new
                        {
                            Id = 11,
                            Email = "johan@example.com",
                            FirstName = "Johan",
                            LastName = "Lindberg",
                            Phone = "0702345687"
                        },
                        new
                        {
                            Id = 12,
                            Email = "elin@example.com",
                            FirstName = "Elin",
                            LastName = "Persson",
                            Phone = "0702345688"
                        },
                        new
                        {
                            Id = 13,
                            Email = "andreas@example.com",
                            FirstName = "Andreas",
                            LastName = "Eriksson",
                            Phone = "0702345689"
                        },
                        new
                        {
                            Id = 14,
                            Email = "nora@example.com",
                            FirstName = "Nora",
                            LastName = "Bergström",
                            Phone = "0702345690"
                        },
                        new
                        {
                            Id = 15,
                            Email = "viktor@example.com",
                            FirstName = "Viktor",
                            LastName = "Holm",
                            Phone = "0702345691"
                        });
                });

            modelBuilder.Entity("Gotlandsrussen.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "101",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "102",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "103",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "104",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "105",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "106",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "107",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "108",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "109",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 10,
                            Name = "110",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "111",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 12,
                            Name = "112",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 13,
                            Name = "113",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 14,
                            Name = "114",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 15,
                            Name = "115",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 16,
                            Name = "116",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 17,
                            Name = "117",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 18,
                            Name = "118",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 19,
                            Name = "119",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 20,
                            Name = "120",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 21,
                            Name = "121",
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 22,
                            Name = "122",
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 23,
                            Name = "123",
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 24,
                            Name = "124",
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 25,
                            Name = "125",
                            RoomTypeId = 5
                        });
                });

            modelBuilder.Entity("Gotlandsrussen.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfBeds")
                        .HasColumnType("integer");

                    b.Property<decimal>("PricePerNight")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Single",
                            NumberOfBeds = 1,
                            PricePerNight = 500m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Double",
                            NumberOfBeds = 2,
                            PricePerNight = 900m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Family",
                            NumberOfBeds = 4,
                            PricePerNight = 1500m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Suite",
                            NumberOfBeds = 6,
                            PricePerNight = 3000m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Stables",
                            NumberOfBeds = 12,
                            PricePerNight = 5500m
                        });
                });

            modelBuilder.Entity("Gotlandsrussen.Models.Booking", b =>
                {
                    b.HasOne("Gotlandsrussen.Models.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("Gotlandsrussen.Models.BookingRoom", b =>
                {
                    b.HasOne("Gotlandsrussen.Models.Booking", "Booking")
                        .WithMany("BookingRooms")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gotlandsrussen.Models.Room", "Room")
                        .WithMany("BookingRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Gotlandsrussen.Models.Room", b =>
                {
                    b.HasOne("Gotlandsrussen.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Gotlandsrussen.Models.Booking", b =>
                {
                    b.Navigation("BookingRooms");
                });

            modelBuilder.Entity("Gotlandsrussen.Models.Guest", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Gotlandsrussen.Models.Room", b =>
                {
                    b.Navigation("BookingRooms");
                });

            modelBuilder.Entity("Gotlandsrussen.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
